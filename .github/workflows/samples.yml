name: Verify Sample Projects
on:
  push:
    branches:
      - 'main'
      - '**maintenance'
    paths-ignore:
      - 'package*.json'
  pull_request:
    branches:
      - '*'
permissions:
  contents: read
jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - id: build
        run: |
          npm install
          npm link
          jhipster-tenantview github-build-matrix
  samples:
    name: ${{ matrix.sample-name }}
    runs-on: ubuntu-latest
    needs: build-matrix
    defaults:
      run:
        working-directory: ${{ github.workspace }}/app
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.build-matrix.outputs.matrix)}}
    steps:
      - uses: jhipster/actions/setup-runner@v0
        with:
          node-version: ${{ matrix.node-version }}
          java-version: ${{ matrix.java-version }}
          npm-version: ${{ matrix.npm-version }}
          maven-cache: true
          gradle-cache: true
      - uses: actions/checkout@v4
        with:
          path: generator-jhipster-tenantview
          fetch-depth: 2
      - name: 'Install blueprint'
        run: npm install && npm link
        working-directory: ${{ github.workspace }}/generator-jhipster-tenantview
      - run: jhipster-tenantview generate-sample ${{ matrix.sample-name }} --skip-install
      - uses: jhipster/actions/compare-sample@v0
        id: compare
        with:
          generator-path: generator-jhipster-tenantview
          cmd: jhipster-tenantview generate-sample ${{ matrix.sample-name }} --skip-install --skip-git
      - run: npm run ci:backend:test
        id: backend
        if: steps.compare.outputs.equals != 'true'
        continue-on-error: ${{matrix.continue-on-backend-tests-error || false}}
        timeout-minutes: 15
      - run: ./npmw install
        if: steps.compare.outputs.equals != 'true'
        timeout-minutes: 7
      - run: npm run ci:frontend:test
        if: steps.compare.outputs.equals != 'true'
        timeout-minutes: 15
      - run: npm run ci:e2e:package
        if: steps.compare.outputs.equals != 'true'
        timeout-minutes: 12
      - run: npm run ci:e2e:prepare
        if: steps.compare.outputs.equals != 'true'
        timeout-minutes: 5
      - run: npm run ci:e2e:run
        id: e2e
        if: steps.compare.outputs.equals != 'true'
        timeout-minutes: 15
      - name: 'BACKEND: Store failure logs'
        uses: actions/upload-artifact@v4
        if: always() && steps.backend.outcome == 'failure'
        with:
          name: log-${{ matrix.sample-name }}
          path: |
            ${{ github.workspace }}/app/build/test-results/**/*.xml
            ${{ github.workspace }}/app/target/surefire-reports
      - name: 'E2E: Store failure screenshots'
        uses: actions/upload-artifact@v4
        if: always() && steps.e2e.outcome == 'failure'
        with:
          name: screenshots-${{ matrix.sample-name }}
          path: ${{ github.workspace }}/app/**/cypress/screenshots
      - name: Dump docker logs
        if: always()
        uses: jwalton/gh-docker-logs@v2
  check-samples:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [samples]
    if: always()
    steps:
      - run: |
          echo '${{ toJSON(needs) }}'
          if [ 'skipped' == '${{ needs.samples.result }}' ] || [ 'success' == '${{ needs.samples.result }}' ] || [ 'closed' == '${{ github.event.action }}' ]; then
            exit 0
          fi
          exit 1
